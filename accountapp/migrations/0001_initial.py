# Generated by Django 4.2 on 2023-09-16 13:36

from decimal import Decimal
from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import phonenumber_field.modelfields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Account',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('username', models.CharField(db_index=True, max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='Уникальное имя')),
                ('url', models.URLField(verbose_name='Сайт предприятия')),
                ('activity', models.CharField(max_length=150, verbose_name='Деятельность предприятия')),
                ('аddress', models.CharField(max_length=150, verbose_name='Адрес организации')),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='электронный адрес')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'Аккаунт',
                'verbose_name_plural': 'Аккаунты',
                'ordering': ['id'],
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='TypeCard',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Введите имя карты', max_length=150, verbose_name='Имя')),
                ('purchase_amount', models.PositiveIntegerField(default=0, verbose_name='Сумма покупки')),
                ('rate_field', models.DecimalField(decimal_places=0, default=Decimal('0'), max_digits=3, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)], verbose_name='Процент скидки')),
                ('initial_bonuses', models.DecimalField(decimal_places=0, default=Decimal('0'), max_digits=10, verbose_name='Начальные бонусы')),
                ('account', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='аккаунт')),
            ],
            options={
                'verbose_name': 'Тип карты',
                'verbose_name_plural': 'Тип карты',
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='Сard',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cardId', models.IntegerField(verbose_name='Код карты')),
                ('bonusBalance', models.PositiveIntegerField(default=0, verbose_name='Баланс карты')),
                ('cardType', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='accountapp.typecard', verbose_name='Тип карты')),
            ],
            options={
                'verbose_name': 'Карта клиента',
                'verbose_name_plural': 'Карты клиентов',
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='PurchaseAmount',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('total_amount', models.PositiveIntegerField(verbose_name='Сумма покупок')),
                ('card', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='accountapp.сard', verbose_name='Карта клиента')),
            ],
            options={
                'verbose_name': 'Сумма покупок клиента',
                'verbose_name_plural': 'Сумма покупок клиентов',
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='Client',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Введите свое имя', max_length=150, verbose_name='Имя')),
                ('surname', models.CharField(help_text='Введите свою фамилию', max_length=150, verbose_name='Фамилия')),
                ('birthday', models.DateField(max_length=8)),
                ('gender', models.CharField(choices=[('male', 'Мужской пол'), ('female', 'Женский пол')], default='Мужской пол', max_length=40)),
                ('reg', models.DateTimeField(auto_now_add=True)),
                ('phone_number', phonenumber_field.modelfields.PhoneNumberField(max_length=128, region=None)),
                ('mail', models.EmailField(max_length=254)),
                ('card', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='accountapp.сard', verbose_name='Карта')),
                ('client', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Компания')),
                ('purchase_amount', models.ForeignKey(default=0, on_delete=django.db.models.deletion.CASCADE, to='accountapp.purchaseamount', verbose_name='Покупка')),
            ],
            options={
                'verbose_name': 'Клиент',
                'verbose_name_plural': 'Клиенты',
            },
        ),
    ]
